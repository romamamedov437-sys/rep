from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes

from replicate_api import start_training, generate_image

def setup_handlers(application):
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    def get_main_keyboard():
        keyboard = [
            [InlineKeyboardButton("üì∏ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ", callback_data="generate")],
            [InlineKeyboardButton("üéì –û–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å", callback_data="train")],
            [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about"),
             InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
        ]
        return InlineKeyboardMarkup(keyboard)

    # /start
    async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç üëã! –Ø –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ.\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_keyboard()
        )

    # /help
    async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é\n"
            "/help ‚Äî –ø–æ–º–æ—â—å\n"
            "/about ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
            "–ö–Ω–æ–ø–∫–∏:\nüì∏ ‚Äî –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ç–æ\nüéì ‚Äî –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏"
        )

    # /about
    async def about_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç –æ–±—É—á–∞–µ—Ç –º–æ–¥–µ–ª–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Replicate."
        )

    # –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏
    async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        query = update.callback_query
        await query.answer()

        if query.data == "generate":
            await query.edit_message_text("üì∏ –í–≤–µ–¥–∏ –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:")
            context.user_data["mode"] = "generate"
        elif query.data == "train":
            await query.edit_message_text("üéì –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è (3-10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)")
            context.user_data["mode"] = "train"
        elif query.data == "about":
            await query.edit_message_text("‚ÑπÔ∏è –Ø –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ Replicate.")
        elif query.data == "help":
            await query.edit_message_text("‚ùì –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã /start /help /about")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)
    async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        mode = context.user_data.get("mode")

        if mode == "generate":
            prompt = update.message.text
            await update.message.reply_text("‚åõ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ç–æ...")
            image_url = await generate_image(prompt)
            if image_url:
                await update.message.reply_photo(photo=image_url, caption="‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
            else:
                await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
            context.user_data["mode"] = None
        else:
            await update.message.reply_text(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {update.message.text}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ (–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏)
    async def photo_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        mode = context.user_data.get("mode")
        if mode == "train":
            await update.message.reply_text("üì§ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –ó–∞–ø—É—Å–∫–∞—é –æ–±—É—á–µ–Ω–∏–µ...")
            job_id = await start_training(update.message.photo[-1])
            if job_id:
                await update.message.reply_text(f"‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!\nID –∑–∞–¥–∞—á–∏: `{job_id}`")
            else:
                await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–±—É—á–µ–Ω–∏—è")
            context.user_data["mode"] = None

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_cmd))
    application.add_handler(CommandHandler("about", about_cmd))
    application.add_handler(CallbackQueryHandler(button_handler))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler))
    application.add_handler(MessageHandler(filters.PHOTO, photo_handler))
